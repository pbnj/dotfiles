{
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[go.mod]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": true,
      "source.organizeImports": true
    },
    "editor.formatOnSave": true
  },
  "[go]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": true,
      "source.organizeImports": true
    },
    "editor.formatOnSave": true,
    "editor.insertSpaces": false
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "off"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "atlascode.bitbucket.enabled": false,
  "atlascode.bitbucket.statusbar.enabled": false,
  "atlascode.bitbucket.statusbar.showLogin": false,
  "atlascode.bitbucket.statusbar.showProduct": false,
  "atlascode.bitbucket.statusbar.showUser": false,
  "atlascode.jira.jqlList": [
    {
      "enabled": true,
      "id": "1afa2c5d-b2e9-4027-b135-9eb35a1e017f",
      "monitor": true,
      "name": "My jira.zuora.com Issues",
      "query": "assignee = currentUser() AND resolution = Unresolved AND status not in ( Cancelled ) ORDER BY key ASC",
      "siteId": "jira.zuora.com"
    }
  ],
  "atlascode.jira.lastCreateSiteAndProject": {
    "projectKey": "ZIAS",
    "siteId": "jira.zuora.com"
  },
  "atlascode.jira.statusbar.enabled": false,
  "atlascode.jira.statusbar.showActiveIssue": false,
  "atlascode.jira.statusbar.showLogin": false,
  "atlascode.jira.statusbar.showProduct": false,
  "atlascode.jira.statusbar.showUser": false,
  "bashIde.highlightParsingErrors": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "dotfiles.repository": "pbnj/dotfiles",
  "dotfiles.targetPath": "~/.dotfiles",
  "editor.codeActionsOnSave": {
    "source.fixAll": true,
    "source.organizeImports": true
  },
  "editor.cursorBlinking": "solid",
  "editor.fontFamily": "'JetBrainsMono Nerd Font', Menlo, Monaco, 'Courier New', monospace",
  "editor.inlineHints.fontFamily": "'JetBrainsMono Nerd Font', Menlo, Monaco, 'Courier New', monospace",
  "editor.minimap.enabled": false,
  "editor.renderWhitespace": "boundary",
  "editor.rulers": [80],
  "editor.smoothScrolling": true,
  "editor.wordWrap": "off",
  "explorer.openEditors.visible": 0,
  "files.associations": {
    "**/templates/*.yaml": "helm",
    "*.envrc": "shellscript",
    "*.hcl": "terraform",
    "*.tfvars": "terraform",
    "*.yaml": "yaml",
    "Dockerfile.*": "dockerfile",
    "kubeconfig_*": "yaml"
  },
  "git.alwaysSignOff": true,
  "git.autoStash": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.rebaseWhenSync": true,
  "git.showPushSuccessNotification": true,
  "git.supportCancellation": true,
  "gitlab.customQueries": [
    {
      "name": "Issues assigned to me",
      "noItemText": "There is no issue assigned to you.",
      "scope": "assigned_to_me",
      "state": "opened",
      "type": "issues"
    },
    {
      "name": "Issues created by me",
      "noItemText": "There is no issue created by you.",
      "scope": "created_by_me",
      "state": "opened",
      "type": "issues"
    },
    {
      "name": "Merge requests assigned to me",
      "noItemText": "There is no MR assigned to you.",
      "scope": "assigned_to_me",
      "state": "opened",
      "type": "merge_requests"
    },
    {
      "name": "Merge requests created by me",
      "noItemText": "There is no MR created by you.",
      "scope": "created_by_me",
      "state": "opened",
      "type": "merge_requests"
    },
    {
      "name": "All project merge requests",
      "noItemText": "The project has no merge requests",
      "scope": "all",
      "state": "opened",
      "type": "merge_requests"
    }
  ],
  "gitlab.instanceUrl": "https://gitlab.zeta.tools",
  "gitlab.showPipelineUpdateNotifications": true,
  "gitlens.advanced.abbreviatedShaLength": 5,
  "gitlens.advanced.messages": {
    "suppressImproperWorkspaceCasingWarning": true
  },
  "gitlens.blame.dateFormat": "",
  "gitlens.blame.highlight.enabled": true,
  "gitlens.codeLens.enabled": false,
  "gitlens.currentLine.dateFormat": "",
  "gitlens.currentLine.enabled": true,
  "gitlens.gitCommands.closeOnFocusOut": true,
  "gitlens.statusBar.dateFormat": "",
  "go.autocompleteUnimportedPackages": true,
  "go.languageServerExperimentalFeatures": {
    "diagnostics": true,
    "documentLink": true,
    "format": true
  },
  "go.lintFlags": ["--fast"],
  "go.lintTool": "golangci-lint",
  "go.useLanguageServer": true,
  "gopls": {
    "completeUnimported": true,
    "deepCompletion": true,
    "usePlaceholders": true
  },
  "hediet.vscode-drawio.local-storage": "eyIuZHJhd2lvLWNvbmZpZyI6IntcImxhbmd1YWdlXCI6XCJcIixcImN1c3RvbUZvbnRzXCI6W10sXCJsaWJyYXJpZXNcIjpcImdlbmVyYWw7ZGZkO2F3czQ7a3ViZXJuZXRlczt0aHJlYXRNb2RlbGluZ1wiLFwiY3VzdG9tTGlicmFyaWVzXCI6W1wiTC5zY3JhdGNocGFkXCJdLFwicGx1Z2luc1wiOltdLFwicmVjZW50Q29sb3JzXCI6W10sXCJmb3JtYXRXaWR0aFwiOjI0MCxcImNyZWF0ZVRhcmdldFwiOmZhbHNlLFwicGFnZUZvcm1hdFwiOntcInhcIjowLFwieVwiOjAsXCJ3aWR0aFwiOjg1MCxcImhlaWdodFwiOjExMDB9LFwic2VhcmNoXCI6dHJ1ZSxcInNob3dTdGFydFNjcmVlblwiOnRydWUsXCJncmlkQ29sb3JcIjpcIiNkMGQwZDBcIixcImRhcmtHcmlkQ29sb3JcIjpcIiM2ZTZlNmVcIixcImF1dG9zYXZlXCI6dHJ1ZSxcInJlc2l6ZUltYWdlc1wiOm51bGwsXCJvcGVuQ291bnRlclwiOjAsXCJ2ZXJzaW9uXCI6MTgsXCJ1bml0XCI6MSxcImlzUnVsZXJPblwiOmZhbHNlLFwidWlcIjpcIlwifSJ9",
  "json.schemaDownload.enable": true,
  "markdown.extension.toc.updateOnSave": false,
  "material-icon-theme.files.associations": {
    "Dockerfile.*": "dockerfile"
  },
  "projectManager.filterOnFullPath": true,
  "projectManager.git.baseFolders": [
    "/Users/pbenjamin/Work",
    "/Users/pbenjamin/Projects"
  ],
  "projectManager.git.maxDepthRecursion": 0,
  "projectManager.groupList": true,
  "projectManager.sortList": "Name",
  "rest-client.fontFamily": "'JetBrainsMono Nerd Font', Menlo, Monaco, 'Courier New', monospace",
  "rest-client.fontSize": 12,
  "ruby.codeCompletion": "rcodetools",
  "ruby.format": "rubocop",
  "ruby.intellisense": "rubyLocate",
  "ruby.lint": {
    "rubocop": true,
    "ruby": true
  },
  "ruby.useLanguageServer": true,
  "rubyTestExplorer.logpanel": true,
  "rubyTestExplorer.minitestCommand": "/Users/pbenjamin/.rvm/gems/ruby-2.7.2/bin/bundle exec rake",
  "rubyTestExplorer.rspecCommand": "/Users/pbenjamin/.rvm/gems/ruby-2.7.2/bin/bundle exec rspec",
  "rubyTestExplorer.rspecDirectory": "./spec",
  "rubyTestExplorer.testFramework": "rspec",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.fontFamily": "'JetBrainsMono Nerd Font', Menlo, Monaco, 'Courier New', monospace",
  "terminal.integrated.macOptionIsMeta": true,
  "testExplorer.addToEditorContextMenu": true,
  "todo-tree.tree.showScanModeButton": false,
  "update.mode": "start",
  "vim.cursorStylePerMode.insert": "line-thin",
  "vim.cursorStylePerMode.normal": "block",
  "vim.cursorStylePerMode.replace": "underline",
  "vim.cursorStylePerMode.visual": "block",
  "vim.cursorStylePerMode.visualblock": "block",
  "vim.cursorStylePerMode.visualline": "block",
  "vim.highlightedyank.enable": true,
  "vim.hlsearch": false,
  "vim.incsearch": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "after": ["$"],
      "before": ["<C-e>"]
    },
    {
      "after": ["^"],
      "before": ["<C-a>"]
    },
    {
      "after": ["o", "<esc>"],
      "before": ["]", "<space>"]
    },
    {
      "after": ["O", "<esc>"],
      "before": ["[", "<space>"]
    },
    {
      "after": ["g", "j"],
      "before": ["j"]
    },
    {
      "after": ["g", "k"],
      "before": ["k"]
    },
    {
      "before": ["<leader>", ":"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<leader>", "a", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<leader>", "t"],
      "commands": ["workbench.action.tasks.runTask"]
    },
    {
      "before": ["<leader>", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<C-w>", "H"],
      "commands": ["workbench.action.moveEditorToLeftGroup"]
    },
    {
      "before": ["<C-w>", "L"],
      "commands": ["workbench.action.moveEditorToRightGroup"]
    },
    {
      "before": ["<C-w>", "J"],
      "commands": ["workbench.action.moveEditorToBelowGroup"]
    },
    {
      "before": ["<C-w>", "K"],
      "commands": ["workbench.action.moveEditorToAboveGroup"]
    },
    {
      "before": ["<C-w>", "\\"],
      "commands": ["workbench.action.splitEditorRight"]
    },
    {
      "before": ["<C-w>", "|"],
      "commands": ["workbench.action.splitEditorLeft"]
    },
    {
      "before": ["<C-w>", "-"],
      "commands": ["workbench.action.splitEditorUp"]
    },
    {
      "before": ["<C-w>", "_"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      "before": ["]", "c"],
      "commands": ["workbench.action.editor.nextChange"]
    },
    {
      "before": ["[", "c"],
      "commands": ["workbench.action.editor.previousChange"]
    },
    {
      "before": ["]", "q"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["[", "q"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "e"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["[", "e"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.peekDefinition"]
    },
    {
      "before": ["g", "d"],
      "commands": ["editor.action.revealDefinition"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.goToReferences"]
    },
    {
      "before": ["g", "o"],
      "commands": ["workbench.action.gotoSymbol"]
    },
    {
      "before": ["g", "O"],
      "commands": ["workbench.action.showAllSymbols"]
    },
    {
      "before": ["<leader>", "g", "s"],
      "commands": ["gitlens.showQuickRepoStatus"]
    },
    {
      "before": ["<leader>", "g", "w"],
      "commands": ["git.stage"]
    },
    {
      "before": ["<leader>", "g", "W"],
      "commands": ["git.stageSelectedRanges"]
    },
    {
      "before": ["g", "s"],
      "commands": ["editor.action.dirtydiff.next"]
    },
    {
      "before": ["<leader>", "g", "c"],
      "commands": ["git.commit"]
    }
  ],
  "vim.useSystemClipboard": true,
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "after": ["$"],
      "before": ["<C-e>"]
    },
    {
      "after": ["^"],
      "before": ["<C-a>"]
    },
    {
      "before": ["]", "e"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["[", "e"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    {
      "before": ["<leader>", "g", "w"],
      "commands": ["git.stageSelectedRanges"]
    },
    {
      "before": ["<leader>", "a", "f"],
      "commands": ["editor.action.formatSelection"]
    }
  ],
  "vim.wrapscan": false,
  "vs-kubernetes": {
    "vs-kubernetes.draft-path.linux": "/root/.vs-kubernetes/tools/draft/linux-amd64/draft",
    "vs-kubernetes.draft-path.mac": "/Users/pbenjamin/.vs-kubernetes/tools/draft/darwin-amd64/draft",
    "vs-kubernetes.helm-path.linux": "/root/.vs-kubernetes/tools/helm/linux-amd64/helm",
    "vs-kubernetes.helm-path.mac": "/Users/pbenjamin/.vs-kubernetes/tools/helm/darwin-amd64/helm",
    "vs-kubernetes.knownKubeconfigs": [],
    "vs-kubernetes.kubeconfig": "/Users/pbenjamin/.kube/configs/eks-14-dev-auw2-zuora",
    "vs-kubernetes.kubectl-path.linux": "/root/.vs-kubernetes/tools/kubectl/kubectl",
    "vs-kubernetes.kubectl-path.mac": "/Users/pbenjamin/.vs-kubernetes/tools/kubectl/kubectl",
    "vs-kubernetes.minikube-path.linux": "/root/.vs-kubernetes/tools/minikube/linux-amd64/minikube",
    "vs-kubernetes.minikube-path.mac": "/Users/pbenjamin/.vs-kubernetes/tools/minikube/darwin-amd64/minikube",
    "vscode-kubernetes.minikube-path.mac": "/Users/pbenjamin/.vs-kubernetes/tools/minikube/darwin-amd64/minikube"
  },
  "window.autoDetectColorScheme": true,
  "window.title": "${rootName}${separator}${activeEditorMedium}",
  "window.titleSeparator": " | ",
  "workbench.activityBar.visible": true,
  "workbench.colorTheme": "Night Owl Light",
  "workbench.editor.decorations.badges": true,
  "workbench.editor.decorations.colors": true,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.preferredDarkColorTheme": "Night Owl",
  "workbench.preferredLightColorTheme": "Night Owl Light",
  "workbench.sideBar.location": "right",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.tree.indent": 10,
  "workbench.tree.renderIndentGuides": "always",
  "yaml.schemaStore.enable": true,
  "yaml.schemas": {
    "file:///Users/pbenjamin/.vscode/extensions/atlassian.atlascode-2.8.5/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
  },
  "editor.codeLensFontFamily": "'JetBrainsMono Nerd Font', Menlo, Monaco, 'Courier New', monospace",
  "diffEditor.renderSideBySide": false
}
