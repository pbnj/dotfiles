set nocompatible

call plug#begin('~/.vim/plugged')

" editorconfig
Plug 'editorconfig/editorconfig-vim'

" highlight yanks
Plug 'machakann/vim-highlightedyank'

" git gutters
Plug 'mhinz/vim-signify'

" tab completion
Plug 'ervandew/supertab'

" test Runner
Plug 'janko/vim-test'

" tmux
Plug 'tmux-plugins/vim-tmux-focus-events'

" fuzzy finder
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" alignment
Plug 'godlygeek/tabular'
Plug 'tommcdo/vim-lion'

" change root dir
Plug 'airblade/vim-rooter'

" text objects
Plug 'wellle/targets.vim'

" tpope
Plug 'tpope/vim-dadbod'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive' | Plug 'shumphrey/fugitive-gitlab.vim'
Plug 'tpope/vim-jdaddy'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-characterize'
Plug 'tpope/vim-commentary'
" Plug 'ciaranm/detectindent' " alternative to vim-sleuth

" hashicorp tools
Plug 'hashivim/vim-hashicorp-tools'

" tags
Plug 'ludovicchabant/vim-gutentags'
Plug 'tomtom/tlib_vim'
Plug 'tomtom/ttags_vim'

" romainl
Plug 'romainl/vim-qf'
Plug 'romainl/vim-qlist'

" languages
Plug 'chrisbra/csv.vim'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-rails'
Plug 'rust-lang/rust.vim'
Plug 'stephpy/vim-yaml'
Plug 'cespare/vim-toml'
Plug 'tsandall/vim-rego'
Plug 'towolf/vim-helm'
Plug 'ekalinin/Dockerfile.vim'
Plug 'plasticboy/vim-markdown'
Plug 'elzr/vim-json'
Plug 'fatih/vim-go' , { 'do': ':GoUpdateBinaries' }

" vim colorscheme
Plug 'flazz/vim-colorschemes'

call plug#end()

filetype on        " Enable filetype detection
filetype indent on " Enable filetype-specific indenting
filetype plugin on " Enable filetype-specific plugins

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" SETTINGS: Appearance
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" https://gist.github.com/romainl/379904f91fa40533175dfaec4c833f2f
function! MyColors() abort

  highlight SignColumn NONE

  " highlight clear DiffAdd
  " highlight clear DiffChange
  " highlight clear DiffDelete

  " highlight DiffAdd    cterm=NONE ctermbg=NONE gui=NONE guibg=NONE
  " highlight DiffChange cterm=NONE ctermbg=NONE gui=NONE guibg=NONE
  " highlight DiffDelete cterm=NONE ctermbg=NONE gui=NONE guibg=NONE

  " highlight Visual     term=underline cterm=underline ctermbg=NONE ctermfg=NONE gui=underline guibg=NONE guifg=NONE
  " highlight CursorLine term=underline cterm=underline ctermbg=NONE ctermfg=NONE gui=underline guibg=NONE guifg=NONE

endfunction

augroup MyColors
  autocmd!
  autocmd ColorScheme * call MyColors()
augroup END

colorscheme github

set background=light

" syntax off
" let g:syntax_on = 0

" neovim specific settings
if has('nvim')
  set inccommand=split
endif

" set font for vim GUIs
if has("gui_running")
  if has("gui_gtk")
    set guifont=JetBrainsMono\ Nerd\ Font\ 11
  elseif has("gui_macvim")
    set guifont=JetBrainsMono\ Nerd\ Font:h11
  elseif has("gui_win32")
    set guifont=JetBrainsMono\ Nerd\ Font:h11:cANSI
  endif
endif

" statusline
set statusline=
set statusline+=[%n]\                                       " buffer number
set statusline+=%f\                                         " file name
set statusline+=%m                                          " modified?
set statusline+=%r                                          " read only?
set statusline+=%h                                          " help?
set statusline+=%w                                          " preview?
set statusline+=[%{&ff}]                                    " file format
set statusline+=%y                                          " syntax
set statusline+=[ts:%{&ts}/sts:%{&sts}/sw:%{&sw}/et:%{&et}] " tabstop/softtabstop/shiftwidth/expandtab
set statusline+=[line:%03l/%L\ (%p%%)]                      " current line / total # lines (% into file)
set statusline+=[col:%04v]                                  " current line & column
set statusline+=\ %{FugitiveStatusline()}                   " git info

function! ToggleSyntax() abort
  if exists("g:syntax_on") | syntax off | else | syntax enable | endif
endfunction
command! ToggleSyntax :call ToggleSyntax()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" SETTINGS: Options
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set autoindent
set autoread
set backspace=indent,eol,start
set belloff=all
set breakindent
set clipboard=unnamed,unnamedplus
set cmdheight=2
set colorcolumn=+1
set completeopt=menu,noinsert,noselect
set conceallevel=0
set cursorline
set display=lastline
set encoding=utf-8
set fileencoding=utf-8
set formatoptions+=j " remove comment leader when joining lines
set formatoptions+=n " when formatting text, recognize numbered lists
set formatoptions-=t " don't auto-wrap text using textwidth
set hidden
set hlsearch
set ignorecase
set incsearch
set infercase
set laststatus=2
set lazyredraw
set linebreak
set list
set listchars=tab:»\ ,extends:›,precedes:‹,nbsp:·,trail:·
set mouse=a
set nobackup
set nofoldenable
set nomodeline
set norelativenumber
set nospell
set noswapfile
set novisualbell
set nowrap
set nowrapscan " stop searching at end of file. do not restart search from top
set nowritebackup
set number
set path+=**
set pumheight=10
set ruler
set secure
set shortmess+=c
set showcmd
set showmatch
set showmode
set signcolumn=yes
set smartcase
set smarttab
set splitbelow
set splitright
set t_ut=
set tags+=tags
set termguicolors
set textwidth=79
set ttyfast
set undodir=$HOME/.vim/undo
set undofile
set updatetime=100
set wildignorecase
set wildmenu
set wildmode=longest,full

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" SETTINGS: General > FileTypes
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" augroup general
  " autocmd!
  " autocmd FileType vim,markdown,json,terraform,hcl,tf,ruby,yaml,helm
        " \ setlocal softtabstop=2 |
        " \ setlocal shiftwidth=2  |
        " \ setlocal expandtab
" augroup END

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" SETTINGS: General > Mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)

" Insert mode completion
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-l> <plug>(fzf-complete-line)

" Misc
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk

" Getting around
nnoremap <Leader>b :b <C-d>
nnoremap <Leader>e :e **/
nnoremap <Leader>i :Ilist<space>
nnoremap <Leader>j :tjump /
nnoremap <Leader>m :make<cr>
nnoremap <Leader>q :b#<cr>
nnoremap <Leader>t :TTags<space>*<space>*<space>.<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" SETTINGS: General > Functions & Commands
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

function! GenTOC() abort
  " npm i -g doctoc
  silent ! doctoc --title "\#\# Table of Contents" %
  redraw!
endfunction
command! TOC :call GenTOC()

" https://www.vi-improved.org/recommendations/
function! TrimTrailingWhitespace() abort
  if !&binary && &filetype != 'diff'
    normal mz
    normal Hmy
    %s/\s\+$//e
    normal 'yz<CR>
    normal `z
  endif
endfunction
command! TrimTrailingWhitespace :call TrimTrailingWhitespace()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" SETTINGS: PLUGINS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" languages
let g:vim_json_syntax_conceal = 0

" lion
let g:lion_squeeze_spaces = 1

" fugitive-gitlab
let g:fugitive_gitlab_domains = [
      \ 'https://gitlab.zeta.tools',
      \ 'https://gitlab.com'
      \ ]

" signify
let g:signify_sign_add               = '+'
let g:signify_sign_delete            = '_'
let g:signify_sign_delete_first_line = '‾'
let g:signify_sign_change            = '~'
nnoremap gs :SignifyHunkDiff<cr>

""""""""""""""""""""""""""""""""""""""""
" SETTINGS: Plugins > vim-markdown
""""""""""""""""""""""""""""""""""""""""

let g:vim_markdown_new_list_item_indent = 2
let g:vim_markdown_frontmatter = 1

""""""""""""""""""""""""""""""""""""""""
" SETTINGS: Plugins > vim-test
""""""""""""""""""""""""""""""""""""""""

nnoremap <leader>TF :TestFile<CR>
nnoremap <leader>TL :TestLast<CR>
nnoremap <leader>TN :TestNearest<CR>
nnoremap <leader>TS :TestSuite<CR>
nnoremap <leader>TV :TestVisit<CR>
let test#strategy = "dispatch"

